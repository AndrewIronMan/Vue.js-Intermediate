{"remainingRequest":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/employee/Desktop/projects/vuejs-intermediate/src/views/auth/Auth.vue?vue&type=style&index=0&id=47de25a5&lang=scss&scoped=true&","dependencies":[{"path":"/home/employee/Desktop/projects/vuejs-intermediate/src/views/auth/Auth.vue","mtime":1624638863535},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmF1dGggewogIG1pbi1oZWlnaHQ6IDg3LjV2aDsKfQouYXV0aC1mb3JtIHsKICBtaW4td2lkdGg6IDQwMHB4OwogIG1heC13aWR0aDogNjAwcHg7Cn0KLmN1c3RvbS1jaGVjYm94LWNsYXNzIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0K"},{"version":3,"sources":["Auth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Auth.vue","sourceRoot":"src/views/auth","sourcesContent":["<template>\n  <div class=\"auth d-flex flex-column justify-center align-center\">\n      <validation-observer\n    ref=\"observer\"\n    v-slot=\"{ invalid }\"\n  >\n    <form class=\"auth-form\">\n         <validation-provider>\n      <v-text-field\n        v-model=\"email\"\n        :error-messages=\"emailErrors\"\n        label=\"E-mail\"\n        required\n        @input=\"$v.email.$touch()\"\n        @blur=\"$v.email.$touch()\"\n      ></v-text-field>\n         </validation-provider>\n   <validation-provider>\n      <v-text-field\n        v-model=\"password\"\n        :error-messages=\"passwordErrors\"\n        label=\"Password\"\n        required\n        type=\"password\"\n        @input=\"$v.password.$touch()\"\n        @blur=\"$v.password.$touch()\"\n      ></v-text-field>\n         </validation-provider>\n            <validation-provider>\n      <v-radio-group v-model=\"gender\">\n        <label class=\"mb-1\">Gender</label>\n        <v-radio v-for=\"n in radioGroup\" :key=\"n\" :label=\"n\" :value=\"n\"></v-radio>\n      </v-radio-group>\n         </validation-provider>\n      <validation-provider>\n      <div class=\"custom-checbox-class\">\n        <v-checkbox v-model=\"checkbox\"> </v-checkbox>\n        <div class=\"text-center\">\n          <v-dialog v-model=\"dialog\" width=\"500\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <a v-on:click=\"openPopap\" v-bind=\"attrs\" v-on=\"on\">\n                I agree with Terms & Conditions\n              </a>\n            </template>\n\n            <v-card>\n              <v-card-title class=\"text-h5 grey lighten-2\">\n                Terms & Conditions\n              </v-card-title>\n              <v-card-text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n                exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute\n                irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n                pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n              </v-card-text>\n              <v-divider></v-divider>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"primary\" text @click=\"dialog = false\">\n                  I accept\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </div>\n      </div>\n      </validation-provider>\n\n      <v-btn class=\"mr-4\"    :disabled=\"invalid\" @click=\"submit\">\n            submit\n          </v-btn>\n          <!-- <v-btn @click=\"clear\">\n            clear\n          </v-btn> -->\n    </form>\n </validation-observer>\n  </div>\n</template>\n\n<script>\nimport { validationMixin } from 'vuelidate';\nimport { required, email } from 'vuelidate/lib/validators';\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode } from 'vee-validate';\n\n\nexport default {\n  name: 'AuthComponent',\n  mixins: [validationMixin],\n\n  validations: {\n    password: { required },\n    email: { required, email },\n    select: { required },\n    checkbox: {\n      checked(val) {\n        return val;\n      },\n    },\n  },\n\n  data: () => ({\n    dialog: false,\n    password: '',\n    email: '',\n    select: null,\n    gender: '',\n    radioGroup: ['male', 'female'],\n    checkbox: false,\n  }),\n\n  computed: {\n    checkboxErrors() {\n      const errors = [];\n      if (!this.$v.checkbox.$dirty) return errors;\n      if (!this.$v.checkbox.checked) {\n        errors.push('You must agree to continue!');\n      }\n      return errors;\n    },\n    selectErrors() {\n      const errors = [];\n      if (!this.$v.select.$dirty) return errors;\n      if (!this.$v.select.required) {\n        errors.push('Item is required');\n      }\n      return errors;\n    },\n    passwordErrors() {\n      const PASSWORD_RULES_REGEX = new RegExp(\n        '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[_!@+#$%^&*])(?=.{8,})',\n      );\n      const errors = [];\n      if (!this.$v.password.$dirty) return errors;\n      if (!PASSWORD_RULES_REGEX.test(this.$v.password.$model)) {\n        errors.push(\n          'Password must contain uppercase and lowercase characters, number and a symbol',\n        );\n      }\n      if (!this.$v.password.required) {\n        errors.push('Password is required.');\n      }\n      return errors;\n    },\n    emailErrors() {\n      const errors = [];\n      if (!this.$v.email.$dirty) return errors;\n      if (!this.$v.email.email) {\n        errors.push('Must be valid e-mail');\n      }\n      if (!this.$v.email.required) {\n        errors.push('E-mail is required');\n      }\n      return errors;\n    },\n  },\n\n  methods: {\n    submit() {\n      this.$v.$touch();\n    },\n    clear() {\n      this.$v.$reset();\n      this.password = '';\n      this.email = '';\n      this.select = null;\n      this.checkbox = false;\n    },\n    openPopap() {\n      console.log('open poppap');\n    },\n  },\n  watch: {\n    gender(newVal) {\n      console.log(newVal);\n    },\n  },\n  updated() {\n    console.log(this.$v);\n  },\n\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.auth {\n  min-height: 87.5vh;\n}\n.auth-form {\n  min-width: 400px;\n  max-width: 600px;\n}\n.custom-checbox-class {\n  display: flex;\n  align-items: center;\n}\n</style>\n"]}]}