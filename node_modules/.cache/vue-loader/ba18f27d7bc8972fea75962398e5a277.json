{"remainingRequest":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/employee/Desktop/projects/vuejs-intermediate/src/views/auth/Auth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/employee/Desktop/projects/vuejs-intermediate/src/views/auth/Auth.vue","mtime":1625067522338},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgcmVxdWlyZWQsIGVtYWlsLCBtaW4sIHJlZ2V4LAp9IGZyb20gJ3ZlZS12YWxpZGF0ZS9kaXN0L3J1bGVzJzsKaW1wb3J0IHsKICBleHRlbmQsIFZhbGlkYXRpb25PYnNlcnZlciwgVmFsaWRhdGlvblByb3ZpZGVyLCBzZXRJbnRlcmFjdGlvbk1vZGUsCn0gZnJvbSAndmVlLXZhbGlkYXRlJzsKaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgcm91dGVyQ29uZmlnIGZyb20gJy4uLy4uL2NvbmZpZ3Mvcm91dGVyQ29uZmlnJzsKCnNldEludGVyYWN0aW9uTW9kZSgnZWFnZXInKTsKCmV4dGVuZCgncmVxdWlyZWQnLCB7CiAgLi4ucmVxdWlyZWQsCiAgbWVzc2FnZTogJ3tfZmllbGRffSBjYW4gbm90IGJlIGVtcHR5JywKfSk7CgpleHRlbmQoJ21pbicsIHsKICAuLi5taW4sCiAgbWVzc2FnZTogJ3tfZmllbGRffSBtYXkgbm90IGJlIGxlc3MgdGhhbiB7bGVuZ3RofSBjaGFyYWN0ZXJzJywKfSk7CgpleHRlbmQoJ2NoYW5nZWQnLCB7CiAgLi4ubWluLAogIG1lc3NhZ2U6ICd7X2ZpZWxkX30gbWF5IG5vdCBiZSBsZXNzIHRoYW4ge2xlbmd0aH0gY2hhcmFjdGVycycsCn0pOwpleHRlbmQoJ3JlZ2V4JywgewogIC4uLnJlZ2V4LAogIG1lc3NhZ2U6ICd7X2ZpZWxkX30gbXVzdCBjb250YWluIHVwcGVyY2FzZSBhbmQgbG93ZXJjYXNlIGNoYXJhY3RlcnMsIG51bWJlciBhbmQgYSBzeW1ib2wnLAp9KTsKCmV4dGVuZCgnZW1haWwnLCB7CiAgLi4uZW1haWwsCiAgbWVzc2FnZTogJ0VtYWlsIG11c3QgYmUgdmFsaWQnLAp9KTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXV0aENvbXBvbmVudCcsCiAgY29tcG9uZW50czogewogICAgVmFsaWRhdGlvblByb3ZpZGVyLAogICAgVmFsaWRhdGlvbk9ic2VydmVyLAogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGdlbmRlckxpc3Q6IFsnRmVtYWxlJywgJ01hbGUnXSwKICAgIGdlbmRlcjogJycsCiAgICBwYXNzd29yZDogJycsCiAgICBlbWFpbDogJycsCiAgICBhZ3JlZTogbnVsbCwKICAgIGRpYWxvZzogZmFsc2UsCiAgfSksCgogIG1ldGhvZHM6IHsKICAgIC4uLm1hcEFjdGlvbnMoeyBhdXRoOiAnYXV0aC9yZWdpc3RyYXRpb24nIH0pLAogICAgYXN5bmMgc3VibWl0KCkgewogICAgICB0aGlzLiRyZWZzLm9ic2VydmVyLnZhbGlkYXRlKCk7CiAgICAgIGNvbnN0IHJlYWR5ID0gYXdhaXQgdGhpcy5hdXRoKHsKICAgICAgICBlbWFpbDogdGhpcy5lbWFpbCwKICAgICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCwKICAgICAgICBhZ3JlZTogdGhpcy5hZ3JlZSwKICAgICAgICBnZW5kZXI6IHRoaXMuZ2VuZGVyLAogICAgICB9KTsKICAgICAgdGhpcy5jbGVhcigpOwogICAgICBpZiAoIXJlYWR5KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAke3JvdXRlckNvbmZpZy5Qb3N0c30vQWxsYCk7CiAgICB9LAogICAgY2xlYXIoKSB7CiAgICAgIHRoaXMuZW1haWwgPSAnJzsKICAgICAgdGhpcy5wYXNzd29yZCA9ICcnOwogICAgICB0aGlzLmFncmVlID0gJyc7CiAgICAgIHRoaXMuZ2VuZGVyID0gJyc7CiAgICAgIHRoaXMuJHJlZnMub2JzZXJ2ZXIucmVzZXQoKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Auth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Auth.vue","sourceRoot":"src/views/auth","sourcesContent":["<template>\n  <div class=\"auth d-flex flex-column justify-center align-center\">\n    <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n      <form @submit.prevent=\"submit\">\n        <validation-provider v-slot=\"{ errors }\" name=\"email\" rules=\"required|email\">\n          <v-text-field\n            v-model=\"email\"\n            :error-messages=\"errors\"\n            label=\"E-mail\"\n            required\n          ></v-text-field>\n        </validation-provider>\n        <validation-provider\n          v-slot=\"{ errors }\"\n          name=\"Password\"\n          :rules=\"{\n            required: true,\n            min: 8,\n            regex: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[_!@+#$%^&*])(?=.{8,})'\n          }\"\n        >\n          <v-text-field\n            v-model=\"password\"\n            :counter=\"8\"\n            :error-messages=\"errors\"\n            label=\"Password\"\n            type=\"password\"\n            required\n          ></v-text-field>\n        </validation-provider>\n        <validation-provider v-slot=\"{ errors }\" name=\"Gender\" rules=\"required\">\n          <v-radio-group v-model=\"gender\">\n            <v-radio\n              v-for=\"g in genderList\"\n              :key=\"g\"\n              :label=\"g\"\n              :value=\"g\"\n              :error-messages=\"errors\"\n            ></v-radio>\n          </v-radio-group>\n        </validation-provider>\n        <validation-provider\n          v-slot=\"{ errors }\"\n          :rules=\"{\n            required: true\n          }\"\n          name=\"checkbox\"\n        >\n          <div class=\"custom-checbox-class\">\n            <v-checkbox v-model=\"agree\" :error-messages=\"errors\">\n              <template v-slot:label>\n                <div class=\"text-center dialog\">\n                  <v-dialog v-model=\"dialog\" width=\"600\">\n                    <template v-slot:activator=\"{ on, attrs }\">\n                      <a v-bind=\"attrs\" v-on.stop=\"on\">\n                        I agree with Terms & Conditions\n                      </a>\n                    </template>\n\n                    <v-card>\n                      <v-card-title class=\"text-h5 grey lighten-2\">\n                        Terms & Conditions\n                      </v-card-title>\n                      <v-card-text>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n                        cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                      </v-card-text>\n                      <v-divider></v-divider>\n                      <v-card-actions>\n                        <v-spacer></v-spacer>\n                        <v-btn color=\"primary\" text @click.stop=\"dialog = false\">\n                          I accept\n                        </v-btn>\n                      </v-card-actions>\n                    </v-card>\n                  </v-dialog>\n                </div>\n              </template>\n            </v-checkbox>\n          </div>\n        </validation-provider>\n        <v-btn class=\"mr-4\" type=\"submit\" :disabled=\"!(agree === true && !invalid)\">\n          submit\n        </v-btn>\n      </form>\n    </validation-observer>\n  </div>\n</template>\n\n<script>\nimport {\n  required, email, min, regex,\n} from 'vee-validate/dist/rules';\nimport {\n  extend, ValidationObserver, ValidationProvider, setInteractionMode,\n} from 'vee-validate';\nimport { mapActions } from 'vuex';\nimport routerConfig from '../../configs/routerConfig';\n\nsetInteractionMode('eager');\n\nextend('required', {\n  ...required,\n  message: '{_field_} can not be empty',\n});\n\nextend('min', {\n  ...min,\n  message: '{_field_} may not be less than {length} characters',\n});\n\nextend('changed', {\n  ...min,\n  message: '{_field_} may not be less than {length} characters',\n});\nextend('regex', {\n  ...regex,\n  message: '{_field_} must contain uppercase and lowercase characters, number and a symbol',\n});\n\nextend('email', {\n  ...email,\n  message: 'Email must be valid',\n});\n\nexport default {\n  name: 'AuthComponent',\n  components: {\n    ValidationProvider,\n    ValidationObserver,\n  },\n  data: () => ({\n    genderList: ['Female', 'Male'],\n    gender: '',\n    password: '',\n    email: '',\n    agree: null,\n    dialog: false,\n  }),\n\n  methods: {\n    ...mapActions({ auth: 'auth/registration' }),\n    async submit() {\n      this.$refs.observer.validate();\n      const ready = await this.auth({\n        email: this.email,\n        password: this.password,\n        agree: this.agree,\n        gender: this.gender,\n      });\n      this.clear();\n      if (!ready) {\n        return;\n      }\n      this.$router.push(`${routerConfig.Posts}/All`);\n    },\n    clear() {\n      this.email = '';\n      this.password = '';\n      this.agree = '';\n      this.gender = '';\n      this.$refs.observer.reset();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.auth {\n  min-height: 87.5vh;\n}\n.auth-form {\n  min-width: 400px;\n  max-width: 600px;\n}\n.dialog {\n  z-index: 5;\n}\n</style>\n"]}]}