{"remainingRequest":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/babel-loader/lib/index.js!/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/employee/Desktop/projects/vuejs-intermediate/src/views/posts/Posts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/employee/Desktop/projects/vuejs-intermediate/src/views/posts/Posts.vue","mtime":1625069732962},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZW1wbG95ZWUvRGVza3RvcC9wcm9qZWN0cy92dWVqcy1pbnRlcm1lZGlhdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9zdHNDb21wb25lbnQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbml0UGVyUGFnZTogMTAsCiAgICAgIHBlclBhZ2U6IDEwLAogICAgICBuZXh0UGFnZTogdW5kZWZpbmVkLAogICAgICBhdXRob3I6IHVuZGVmaW5lZCwKICAgICAgdG90YWxQYWdlczogMQogICAgfTsKICB9LAogIHByb3BzOiBbJ3VzZXJJZCddLAogIGNvbXBvbmVudHM6IHsKICAgIFBvc3RDYXJkQ29tcG9uZW50OiBmdW5jdGlvbiBQb3N0Q2FyZENvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnLi9wYXJ0aWFscy9Qb3N0Q2FyZC52dWUnKTsKICAgIH0sCiAgICBQb3N0c1BsYWNlaG9sZGVyQ29tcG9uZW50OiBmdW5jdGlvbiBQb3N0c1BsYWNlaG9sZGVyQ29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCcuL3BhcnRpYWxzL1Bvc3RzUGxhY2Vob2xkZXIudnVlJyk7CiAgICB9LAogICAgUG9zdHNQYWdpbmF0aW9uQ29tcG9uZW50OiBmdW5jdGlvbiBQb3N0c1BhZ2luYXRpb25Db21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJy4vcGFydGlhbHMvUG9zdHNQYWdpbmF0aW9uLnZ1ZScpOwogICAgfSwKICAgIFBvc3RzRmlsdGVyQ29tcG9uZW50OiBmdW5jdGlvbiBQb3N0c0ZpbHRlckNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnLi9wYXJ0aWFscy9Qb3N0c0ZpbHRlci52dWUnKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNldFBlclBhZ2U6IGZ1bmN0aW9uIHNldFBlclBhZ2UodmFsKSB7CiAgICAgIHRoaXMucGVyUGFnZSA9ICt2YWw7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBxdWVyeTogX29iamVjdFNwcmVhZCh7fSwgdGhpcy4kcm91dGUucXVlcnksIHsKICAgICAgICAgIHBlclBhZ2U6IHZhbAogICAgICAgIH0pCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGlmIChlcnJvci5uYW1lICE9PSAnTmF2aWdhdGlvbkR1cGxpY2F0ZWQnKSB7CiAgICAgICAgICB0aHJvdyBlcnJvcjsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHNldE5leHRQYWdlOiBmdW5jdGlvbiBzZXROZXh0UGFnZShwYWdlKSB7CiAgICAgIHRoaXMubmV4dFBhZ2UgPSBwYWdlOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcXVlcnk6IF9vYmplY3RTcHJlYWQoe30sIHRoaXMuJHJvdXRlLnF1ZXJ5LCB7CiAgICAgICAgICBjdXJyZW50UGFnZTogcGFnZQogICAgICAgIH0pCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGlmIChlcnJvci5uYW1lICE9PSAnTmF2aWdhdGlvbkR1cGxpY2F0ZWQnKSB7CiAgICAgICAgICB0aHJvdyBlcnJvcjsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHNldEF1dGhvcjogZnVuY3Rpb24gc2V0QXV0aG9yKGF1dGhvcikgewogICAgICB2YXIgX3RoaXMkZ2V0QXV0aG9ycyRmaW5kOwoKICAgICAgdmFyIGF1dGhvcklkID0gKF90aGlzJGdldEF1dGhvcnMkZmluZCA9IHRoaXMuZ2V0QXV0aG9ycy5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udXNlcm5hbWUgPT09IGF1dGhvcjsKICAgICAgfSkpID09PSBudWxsIHx8IF90aGlzJGdldEF1dGhvcnMkZmluZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkZ2V0QXV0aG9ycyRmaW5kLmlkOwogICAgICB0aGlzLmF1dGhvciA9IGF1dGhvcklkOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICB1c2VySWQ6IGF1dGhvcklkCiAgICAgICAgfSwKICAgICAgICBxdWVyeTogdGhpcy4kcm91dGUucXVlcnkKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yLm5hbWUgIT09ICdOYXZpZ2F0aW9uRHVwbGljYXRlZCcpIHsKICAgICAgICAgIHRocm93IGVycm9yOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgaW5pdEZpbHRlclBhcmFtczogZnVuY3Rpb24gaW5pdEZpbHRlclBhcmFtcygpIHsKICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LmN1cnJlbnRQYWdlKSB0aGlzLnNldE5leHRQYWdlKCt0aGlzLiRyb3V0ZS5xdWVyeS5jdXJyZW50UGFnZSk7CiAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5wZXJQYWdlKSB0aGlzLnNldFBlclBhZ2UoK3RoaXMuJHJvdXRlLnF1ZXJ5LnBlclBhZ2UpOwogICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkucGVyUGFnZSkgdGhpcy5pbml0UGVyUGFnZSA9ICt0aGlzLiRyb3V0ZS5xdWVyeS5wZXJQYWdlOwogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLnVzZXJJZCkgdGhpcy5hdXRob3IgPSArdGhpcy4kcm91dGUucGFyYW1zLnVzZXJJZDsKICAgIH0sCiAgICBzZXRTZWFyY2hTdHJpbmc6IGZ1bmN0aW9uIHNldFNlYXJjaFN0cmluZygpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHF1ZXJ5OiBfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLiRyb3V0ZS5xdWVyeSwgewogICAgICAgICAgcGVyUGFnZTogK3RoaXMucGVyUGFnZSwKICAgICAgICAgIGN1cnJlbnRQYWdlOiArdGhpcy5uZXh0UGFnZQogICAgICAgIH0pLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgdXNlcklkOiB0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcklkID8gdGhpcy4kcm91dGUucGFyYW1zLnVzZXJJZCA6ICdBbGwnCiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBpZiAoZXJyb3IubmFtZSAhPT0gJ05hdmlnYXRpb25EdXBsaWNhdGVkJykgewogICAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKHsKICAgIHBvc3RzR2V0dGVyOiAncG9zdHMvZ2V0UG9zdHMnLAogICAgZ2V0QXV0aG9yczogJ2F1dGhvcnMvZ2V0QXV0aG9ycycKICB9KSwgewogICAgYXV0aG9yc05hbWU6IGZ1bmN0aW9uIGF1dGhvcnNOYW1lKCkgewogICAgICByZXR1cm4gdGhpcy5nZXRBdXRob3JzLm1hcChmdW5jdGlvbiAoYXV0aG9yKSB7CiAgICAgICAgcmV0dXJuIGF1dGhvci51c2VybmFtZTsKICAgICAgfSk7CiAgICB9LAogICAgcG9zdHM6IGZ1bmN0aW9uIHBvc3RzKCkgewogICAgICBpZiAodGhpcy51c2VySWQgJiYgdGhpcy51c2VySWQgIT09ICdBbGwnKSB7CiAgICAgICAgdmFyIF9wb3N0cyA9IHRoaXMucG9zdHNHZXR0ZXIoewogICAgICAgICAgdXNlcklkOiB0aGlzLmF1dGhvciwKICAgICAgICAgIG5leHRQYWdlOiB0aGlzLm5leHRQYWdlLAogICAgICAgICAgcGVyUGFnZTogdGhpcy5wZXJQYWdlCiAgICAgICAgfSk7CgogICAgICAgIHJldHVybiBfcG9zdHM7CiAgICAgIH0KCiAgICAgIHZhciBwb3N0cyA9IHRoaXMucG9zdHNHZXR0ZXIoewogICAgICAgIG5leHRQYWdlOiB0aGlzLm5leHRQYWdlLAogICAgICAgIHBlclBhZ2U6IHRoaXMucGVyUGFnZQogICAgICB9KTsKICAgICAgcmV0dXJuIHBvc3RzOwogICAgfSwKICAgIGF1dGhvck5hbWU6IGZ1bmN0aW9uIGF1dGhvck5hbWUoKSB7CiAgICAgIHZhciBfdGhpcyRnZXRBdXRob3JzJGZpbmQyLAogICAgICAgICAgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGluaXRBdXRob3JOYW1lID0gKF90aGlzJGdldEF1dGhvcnMkZmluZDIgPSB0aGlzLmdldEF1dGhvcnMuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkID09PSBfdGhpcy5hdXRob3I7CiAgICAgIH0pKSA9PT0gbnVsbCB8fCBfdGhpcyRnZXRBdXRob3JzJGZpbmQyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRnZXRBdXRob3JzJGZpbmQyLnVzZXJuYW1lOwogICAgICByZXR1cm4gaW5pdEF1dGhvck5hbWU7CiAgICB9CiAgfSksCiAgd2F0Y2g6IHsKICAgIHBvc3RzOiB7CiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGVtZWRpYXRlOiB0cnVlLAogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgICAgaWYgKG5ld1ZhbC5tZXRhLnRvdGFsUGFnZXMgPCBvbGRWYWwubWV0YS5jdXJyZW50UGFnZSAmJiBuZXdWYWwubWV0YS5jdXJyZW50UGFnZSA8IG9sZFZhbC5tZXRhLmN1cnJlbnRQYWdlICYmIG5ld1ZhbC5tZXRhLnBlclBhZ2UgPiBvbGRWYWwubWV0YS5wZXJQYWdlKSB7CiAgICAgICAgICB2YXIgY3VycmVudFBhZ2UgPSBvbGRWYWwubWV0YS5jdXJyZW50UGFnZSA/IG9sZFZhbC5tZXRhLmN1cnJlbnRQYWdlIDogMTsKICAgICAgICAgIHRoaXMubmV4dFBhZ2UgPSBuZXdWYWwubWV0YS5jdXJyZW50UGFnZSA+IDAgPyBuZXdWYWwubWV0YS5jdXJyZW50UGFnZSA6IGN1cnJlbnRQYWdlOwogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICBxdWVyeTogX29iamVjdFNwcmVhZCh7fSwgdGhpcy4kcm91dGUucXVlcnksIHsKICAgICAgICAgICAgICBjdXJyZW50UGFnZTogbmV3VmFsLm1ldGEuY3VycmVudFBhZ2UgPiAwID8gbmV3VmFsLm1ldGEuY3VycmVudFBhZ2UgOiBjdXJyZW50UGFnZQogICAgICAgICAgICB9KQogICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgIGlmIChlcnJvci5uYW1lICE9PSAnTmF2aWdhdGlvbkR1cGxpY2F0ZWQnKSB7CiAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICRyb3V0ZTogZnVuY3Rpb24gJHJvdXRlKG5ld1ZhbCkgewogICAgICBjb25zb2xlLmxvZyhuZXdWYWwpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5pdEZpbHRlclBhcmFtcygpOwogIH0KfTs="},{"version":3,"sources":["Posts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,SAHA;AAIA,MAAA,MAAA,EAAA,SAJA;AAKA,MAAA,UAAA,EAAA;AALA,KAAA;AAAA,GAFA;AASA,EAAA,KAAA,EAAA,CAAA,QAAA,CATA;AAUA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AAAA,aAAA,OAAA,yBAAA,CAAA;AAAA,KADA;AAEA,IAAA,yBAAA,EAAA;AAAA,aAAA,OAAA,iCAAA,CAAA;AAAA,KAFA;AAGA,IAAA,wBAAA,EAAA;AAAA,aAAA,OAAA,gCAAA,CAAA;AAAA,KAHA;AAIA,IAAA,oBAAA,EAAA;AAAA,aAAA,OAAA,4BAAA,CAAA;AAAA;AAJA,GAVA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,GADA,EACA;AACA,WAAA,OAAA,GAAA,CAAA,GAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,KAAA,oBAAA,KAAA,MAAA,CAAA,KAAA;AAAA,UAAA,OAAA,EAAA;AAAA;AAAA,OAAA,EACA,KADA,CACA,UAAA,KAAA,EAAA;AAAA,YAAA,KAAA,CAAA,IAAA,KAAA,sBAAA,EAAA;AAAA,gBAAA,KAAA;AAAA;AAAA,OADA;AAEA,KALA;AAMA,IAAA,WANA,uBAMA,IANA,EAMA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,KAAA,oBAAA,KAAA,MAAA,CAAA,KAAA;AAAA,UAAA,WAAA,EAAA;AAAA;AAAA,OAAA,EACA,KADA,CACA,UAAA,KAAA,EAAA;AAAA,YAAA,KAAA,CAAA,IAAA,KAAA,sBAAA,EAAA;AAAA,gBAAA,KAAA;AAAA;AAAA,OADA;AAEA,KAVA;AAWA,IAAA,SAXA,qBAWA,MAXA,EAWA;AAAA;;AACA,UAAA,QAAA,4BAAA,KAAA,UAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,QAAA,KAAA,MAAA;AAAA,OAAA,CAAA,0DAAA,sBAAA,EAAA;AACA,WAAA,MAAA,GAAA,QAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA;AAAA,QAAA,KAAA,EAAA,KAAA,MAAA,CAAA;AAAA,OAAA,EACA,KADA,CACA,UAAA,KAAA,EAAA;AAAA,YAAA,KAAA,CAAA,IAAA,KAAA,sBAAA,EAAA;AAAA,gBAAA,KAAA;AAAA;AAAA,OADA;AAEA,KAhBA;AAiBA,IAAA,gBAjBA,8BAiBA;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA,EAAA,KAAA,WAAA,CAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA,UAAA,CAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA,WAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA,UAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,MAAA,GAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA;AACA,KAtBA;AAuBA,IAAA,eAvBA,6BAuBA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,oBACA,KAAA,MAAA,CAAA,KADA;AAEA,UAAA,OAAA,EAAA,CAAA,KAAA,OAFA;AAGA,UAAA,WAAA,EAAA,CAAA,KAAA;AAHA,UADA;AAMA,QAAA,MAAA,EAAA;AAAA,UAAA,MAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA,GAAA;AAAA;AANA,OAAA,EAOA,KAPA,CAOA,UAAA,KAAA,EAAA;AAAA,YAAA,KAAA,CAAA,IAAA,KAAA,sBAAA,EAAA;AAAA,gBAAA,KAAA;AAAA;AAAA,OAPA;AAQA;AAhCA,GAjBA;AAoDA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,WAAA,EAAA,gBADA;AAEA,IAAA,UAAA,EAAA;AAFA,GAAA,CADA;AAMA,IAAA,WANA,yBAMA;AACA,aAAA,KAAA,UAAA,CAAA,GAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,QAAA;AAAA,OAAA,CAAA;AACA,KARA;AASA,IAAA,KATA,mBASA;AACA,UAAA,KAAA,MAAA,IAAA,KAAA,MAAA,KAAA,KAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,WAAA,CACA;AACA,UAAA,MAAA,EAAA,KAAA,MADA;AAEA,UAAA,QAAA,EAAA,KAAA,QAFA;AAGA,UAAA,OAAA,EAAA,KAAA;AAHA,SADA,CAAA;;AAOA,eAAA,MAAA;AACA;;AACA,UAAA,KAAA,GAAA,KAAA,WAAA,CAAA;AACA,QAAA,QAAA,EAAA,KAAA,QADA;AAEA,QAAA,OAAA,EAAA,KAAA;AAFA,OAAA,CAAA;AAIA,aAAA,KAAA;AACA,KAzBA;AA0BA,IAAA,UA1BA,wBA0BA;AAAA;AAAA;;AACA,UAAA,cAAA,6BAAA,KAAA,UAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,KAAA,KAAA,CAAA,MAAA;AAAA,OAAA,CAAA,2DAAA,uBAAA,QAAA;AACA,aAAA,cAAA;AACA;AA7BA,IApDA;AAmFA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,OAHA,mBAIA,MAJA,EAKA,MALA,EAMA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,UAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WAAA,IACA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WADA,IAEA,MAAA,CAAA,IAAA,CAAA,OAAA,GAAA,MAAA,CAAA,IAAA,CAAA,OAFA,EAGA;AACA,cAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,CAAA;AACA,eAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,CAAA,GACA,MAAA,CAAA,IAAA,CAAA,WADA,GACA,WADA;AAEA,eAAA,OAAA,CAAA,IAAA,CAAA;AACA,YAAA,KAAA,oBACA,KAAA,MAAA,CAAA,KADA;AAEA,cAAA,WAAA,EAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,CAAA,GACA,MAAA,CAAA,IAAA,CAAA,WADA,GACA;AAHA;AADA,WAAA,EAOA,KAPA,CAOA,UAAA,KAAA,EAAA;AAAA,gBAAA,KAAA,CAAA,IAAA,KAAA,sBAAA,EAAA;AAAA,oBAAA,KAAA;AAAA;AAAA,WAPA;AAQA;AACA;AAvBA,KADA;AA0BA,IAAA,MA1BA,kBA0BA,MA1BA,EA0BA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA;AA5BA,GAnFA;AAkHA,EAAA,OAlHA,qBAkHA;AACA,SAAA,gBAAA;AACA;AApHA,CAAA","sourcesContent":["<template>\n    <div >\n      <div class='content px-5 py-4 pt-10'>\n        <PostsFilterComponent\n          v-on:setAuthor='setAuthor'\n          :authors='authorsName'\n          :defaultValue='authorName'\n          />\n        <div v-if=\"posts\" class='d-flex flex-wrap' >\n            <PostCardComponent\n              v-for=\"post of posts.posts\"\n              :key = post.id\n              :post='post'\n              class='card my-3 mr-5'/>\n        </div>\n        <PostsPlaceholderComponent v-else/>\n      </div>\n      <PostsPaginationComponent\n        v-on:perPage='setPerPage'\n        v-on:nextPage='setNextPage'\n        :page='nextPage'\n        :initPerPage='initPerPage'\n        :totalPages='posts.meta.totalPages'\n        />\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  name: 'PostsComponent',\n  data: () => ({\n    initPerPage: 10,\n    perPage: 10,\n    nextPage: undefined,\n    author: undefined,\n    totalPages: 1,\n  }),\n  props: ['userId'],\n  components: {\n    PostCardComponent: () => import('./partials/PostCard.vue'),\n    PostsPlaceholderComponent: () => import('./partials/PostsPlaceholder.vue'),\n    PostsPaginationComponent: () => import('./partials/PostsPagination.vue'),\n    PostsFilterComponent: () => import('./partials/PostsFilter.vue'),\n  },\n\n  methods: {\n    setPerPage(val) {\n      this.perPage = +val;\n      this.$router.push({ query: { ...this.$route.query, perPage: val } })\n        .catch((error) => { if (error.name !== 'NavigationDuplicated') { throw error; } });\n    },\n    setNextPage(page) {\n      this.nextPage = page;\n      this.$router.push({ query: { ...this.$route.query, currentPage: page } })\n        .catch((error) => { if (error.name !== 'NavigationDuplicated') { throw error; } });\n    },\n    setAuthor(author) {\n      const authorId = this.getAuthors.find((item) => item.username === author)?.id;\n      this.author = authorId;\n      this.$router.push({ params: { userId: authorId }, query: this.$route.query })\n        .catch((error) => { if (error.name !== 'NavigationDuplicated') { throw error; } });\n    },\n    initFilterParams() {\n      if (this.$route.query.currentPage) this.setNextPage(+this.$route.query.currentPage);\n      if (this.$route.query.perPage) this.setPerPage(+this.$route.query.perPage);\n      if (this.$route.query.perPage) this.initPerPage = +this.$route.query.perPage;\n      if (this.$route.params.userId) this.author = +this.$route.params.userId;\n    },\n    setSearchString() {\n      this.$router.push({\n        query: {\n          ...this.$route.query,\n          perPage: +this.perPage,\n          currentPage: +this.nextPage,\n        },\n        params: { userId: this.$route.params.userId ? this.$route.params.userId : 'All' },\n      }).catch((error) => { if (error.name !== 'NavigationDuplicated') { throw error; } });\n    },\n\n  },\n  computed: {\n    ...mapGetters({\n      postsGetter: 'posts/getPosts',\n      getAuthors: 'authors/getAuthors',\n    }),\n\n    authorsName() {\n      return this.getAuthors.map((author) => author.username);\n    },\n    posts() {\n      if (this.userId && this.userId !== 'All') {\n        const posts = this.postsGetter(\n          {\n            userId: this.author,\n            nextPage: this.nextPage,\n            perPage: this.perPage,\n          },\n        );\n        return posts;\n      }\n      const posts = this.postsGetter({\n        nextPage: this.nextPage,\n        perPage: this.perPage,\n      });\n      return posts;\n    },\n    authorName() {\n      const initAuthorName = this.getAuthors.find((item) => item.id === this.author)?.username;\n      return initAuthorName;\n    },\n  },\n  watch: {\n    posts: {\n      deep: true,\n      emediate: true,\n      handler(\n        newVal,\n        oldVal,\n      ) {\n        if ((newVal.meta.totalPages < oldVal.meta.currentPage)\n            && (newVal.meta.currentPage < oldVal.meta.currentPage)\n            && (newVal.meta.perPage > oldVal.meta.perPage)\n        ) {\n          const currentPage = oldVal.meta.currentPage ? oldVal.meta.currentPage : 1;\n          this.nextPage = newVal.meta.currentPage > 0\n            ? newVal.meta.currentPage : currentPage;\n          this.$router.push({\n            query: {\n              ...this.$route.query,\n              currentPage: newVal.meta.currentPage > 0\n                ? newVal.meta.currentPage : currentPage,\n            },\n          })\n            .catch((error) => { if (error.name !== 'NavigationDuplicated') { throw error; } });\n        }\n      },\n    },\n    $route( newVal) {\n      console.log(newVal)\n    },\n  },\n\n  created() {\n    this.initFilterParams();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .content{\n    min-height: 83vh;\n  }\n</style>\n"],"sourceRoot":"src/views/posts"}]}