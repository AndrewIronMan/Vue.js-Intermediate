{"remainingRequest":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/babel-loader/lib/index.js!/home/employee/Desktop/projects/vuejs-intermediate/node_modules/eslint-loader/index.js??ref--13-0!/home/employee/Desktop/projects/vuejs-intermediate/src/store/modules/posts/getters.js","dependencies":[{"path":"/home/employee/Desktop/projects/vuejs-intermediate/src/store/modules/posts/getters.js","mtime":1624549712545},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CnZhciBnZXR0ZXJzID0gewogIGdldFBvc3RzOiBmdW5jdGlvbiBnZXRQb3N0cyhzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uICh1c2VySWQpIHsKICAgICAgaWYgKHVzZXJJZCkgewogICAgICAgIHJldHVybiBzdGF0ZS5wb3N0cy5maWx0ZXIoZnVuY3Rpb24gKHBvc3QpIHsKICAgICAgICAgIHJldHVybiBwb3N0LnVzZXJJZCA9PT0gK3VzZXJJZDsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIHN0YXRlLnBvc3RzOwogICAgfTsKICB9LAogIGdldFRvdGFsUGFnZXM6IGZ1bmN0aW9uIGdldFRvdGFsUGFnZXMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5tZXRhLnRvdGFsUGFnZXM7CiAgfSwKICBnZXRBdXRob3JzOiBmdW5jdGlvbiBnZXRBdXRob3JzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuYXV0aG9yczsKICB9LAogIGdldFBvc3RCeUlkOiBmdW5jdGlvbiBnZXRQb3N0QnlJZChzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChpZCkgewogICAgICByZXR1cm4gc3RhdGUucG9zdHMuZmluZChmdW5jdGlvbiAocG9zdCkgewogICAgICAgIHJldHVybiBwb3N0LmlkID09PSBpZDsKICAgICAgfSk7CiAgICB9OwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgZ2V0dGVyczs="},{"version":3,"sources":["/home/employee/Desktop/projects/vuejs-intermediate/src/store/modules/posts/getters.js"],"names":["getters","getPosts","state","userId","posts","filter","post","getTotalPages","meta","totalPages","getAuthors","authors","getPostById","id","find"],"mappings":";;AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,WAAW,UAACC,MAAD,EAAY;AAC/B,UAAIA,MAAJ,EAAY;AACV,eAAOD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmB,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACH,MAAL,KAAgB,CAACA,MAA3B;AAAA,SAAnB,CAAP;AACD;;AACD,aAAOD,KAAK,CAACE,KAAb;AACD,KALS;AAAA,GADI;AAOdG,EAAAA,aAAa,EAAE,uBAACL,KAAD;AAAA,WAAWA,KAAK,CAACM,IAAN,CAAWC,UAAtB;AAAA,GAPD;AAQdC,EAAAA,UAAU,EAAE,oBAACR,KAAD;AAAA,WAAWA,KAAK,CAACS,OAAjB;AAAA,GARE;AASdC,EAAAA,WAAW,EAAE,qBAACV,KAAD;AAAA,WAAW,UAACW,EAAD;AAAA,aAAQX,KAAK,CAACE,KAAN,CAAYU,IAAZ,CAAiB,UAACR,IAAD;AAAA,eAAUA,IAAI,CAACO,EAAL,KAAYA,EAAtB;AAAA,OAAjB,CAAR;AAAA,KAAX;AAAA;AATC,CAAhB;AAYA,eAAeb,OAAf","sourcesContent":["const getters = {\n  getPosts: (state) => (userId) => {\n    if (userId) {\n      return state.posts.filter((post) => post.userId === +userId);\n    }\n    return state.posts;\n  },\n  getTotalPages: (state) => state.meta.totalPages,\n  getAuthors: (state) => state.authors,\n  getPostById: (state) => (id) => state.posts.find((post) => post.id === id),\n};\n\nexport default getters;\n"]}]}