{"remainingRequest":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/babel-loader/lib/index.js!/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/employee/Desktop/projects/vuejs-intermediate/src/views/posts/Posts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/employee/Desktop/projects/vuejs-intermediate/src/views/posts/Posts.vue","mtime":1624628773813},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/employee/Desktop/projects/vuejs-intermediate/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvaG9tZS9lbXBsb3llZS9EZXNrdG9wL3Byb2plY3RzL3Z1ZWpzLWludGVybWVkaWF0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQb3N0c0NvbXBvbmVudCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGluaXRQZXJQYWdlOiAxMCwKICAgICAgcGVyUGFnZTogMTAsCiAgICAgIG5leHRQYWdlOiAxLAogICAgICBhdXRob3I6IHVuZGVmaW5lZAogICAgfTsKICB9LAogIHByb3BzOiBbJ3VzZXJJZCddLAogIGNvbXBvbmVudHM6IHsKICAgIFBvc3RDYXJkQ29tcG9uZW50OiBmdW5jdGlvbiBQb3N0Q2FyZENvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnLi9wYXJ0aWFscy9Qb3N0Q2FyZC52dWUnKTsKICAgIH0sCiAgICBQb3N0c1BsYWNlaG9sZGVyQ29tcG9uZW50OiBmdW5jdGlvbiBQb3N0c1BsYWNlaG9sZGVyQ29tcG9uZW50KCkgewogICAgICByZXR1cm4gaW1wb3J0KCcuL3BhcnRpYWxzL1Bvc3RzUGxhY2Vob2xkZXIudnVlJyk7CiAgICB9LAogICAgUG9zdHNQYWdpbmF0aW9uQ29tcG9uZW50OiBmdW5jdGlvbiBQb3N0c1BhZ2luYXRpb25Db21wb25lbnQoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJy4vcGFydGlhbHMvUG9zdHNQYWdpbmF0aW9uLnZ1ZScpOwogICAgfSwKICAgIFBvc3RzRmlsdGVyQ29tcG9uZW50OiBmdW5jdGlvbiBQb3N0c0ZpbHRlckNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnLi9wYXJ0aWFscy9Qb3N0c0ZpbHRlci52dWUnKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoewogICAgZ2V0UG9zdHNBY3Rpb246ICdwb3N0cy9nZXRQb3N0cycKICB9KSwgewogICAgc2V0UGVyUGFnZTogZnVuY3Rpb24gc2V0UGVyUGFnZSh2YWwpIHsKICAgICAgdGhpcy5wZXJQYWdlID0gdmFsOwogICAgfSwKICAgIHNldE5leHRQYWdlOiBmdW5jdGlvbiBzZXROZXh0UGFnZShwYWdlKSB7CiAgICAgIHRoaXMubmV4dFBhZ2UgPSBwYWdlOwogICAgfSwKICAgIHNldEluaXRQZXJQYWdlOiBmdW5jdGlvbiBzZXRJbml0UGVyUGFnZSh2YWwpIHsKICAgICAgdGhpcy5pbml0UGVyUGFnZSA9IHZhbDsKICAgIH0sCiAgICBzZXRBdXRob3I6IGZ1bmN0aW9uIHNldEF1dGhvcihhdXRob3IpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhcmFtczogewogICAgICAgICAgdXNlcklkOiBhdXRob3IKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGlmIChlcnJvci5uYW1lICE9PSAnTmF2aWdhdGlvbkR1cGxpY2F0ZWQnKSB7CiAgICAgICAgICB0aHJvdyBlcnJvcjsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIERJU1BBVENIIEFDVElPTiBUTyBHRVQgUE9TVFMKICAgIGluaXRpYWxHZXR0aW5nUG9zdHM6IGZ1bmN0aW9uIGluaXRpYWxHZXR0aW5nUG9zdHMoKSB7CiAgICAgIC8vIElGIFFVRVJJRVMgQVJFIEVYSVNUIC0+IERJU1BBVENIIEFDVElPTiBUTyBHRVQgUE9TVFMgQlkgUVVFUlkKICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LmN1cnJlbnRQYWdlIHx8IHRoaXMuJHJvdXRlLnF1ZXJ5LnBlclBhZ2UpIHsKICAgICAgICB0aGlzLmdldFBvc3RzQWN0aW9uKHsKICAgICAgICAgIG5leHRQYWdlOiB0aGlzLiRyb3V0ZS5xdWVyeS5jdXJyZW50UGFnZSA/ICt0aGlzLiRyb3V0ZS5xdWVyeS5jdXJyZW50UGFnZSA6IDEsCiAgICAgICAgICBwZXJQYWdlOiB0aGlzLiRyb3V0ZS5xdWVyeS5wZXJQYWdlID8gK3RoaXMuJHJvdXRlLnF1ZXJ5LnBlclBhZ2UgOiAxMAogICAgICAgIH0pOyAvLyBESVNQQVRDSCBBQ1RJT04gVE8gR0VUIFBPU1RTIFdJVEhPVVQgUVVFUlkKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmdldFBvc3RzQWN0aW9uKCk7CiAgICAgIH0KICAgIH0sCiAgICBpbml0RmlsdGVyUGFyYW1zOiBmdW5jdGlvbiBpbml0RmlsdGVyUGFyYW1zKCkgewogICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkuY3VycmVudFBhZ2UpIHRoaXMuc2V0TmV4dFBhZ2UoK3RoaXMuJHJvdXRlLnF1ZXJ5LmN1cnJlbnRQYWdlKTsKICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LnBlclBhZ2UpIHRoaXMuc2V0UGVyUGFnZSgrdGhpcy4kcm91dGUucXVlcnkucGVyUGFnZSk7CiAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5wZXJQYWdlKSB0aGlzLnNldEluaXRQZXJQYWdlKCt0aGlzLiRyb3V0ZS5xdWVyeS5wZXJQYWdlKTsKICAgIH0sCiAgICBzZXRTZWFyY2hTdHJpbmc6IGZ1bmN0aW9uIHNldFNlYXJjaFN0cmluZygpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICBwZXJQYWdlOiB0aGlzLnBlclBhZ2UsCiAgICAgICAgICBjdXJyZW50UGFnZTogK3RoaXMubmV4dFBhZ2UKICAgICAgICB9LAogICAgICAgIHBhcmFtczogewogICAgICAgICAgdXNlcklkOiB0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcklkID8gdGhpcy4kcm91dGUucGFyYW1zLnVzZXJJZCA6ICdBbGwnCiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBpZiAoZXJyb3IubmFtZSAhPT0gJ05hdmlnYXRpb25EdXBsaWNhdGVkJykgewogICAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9KSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyh7CiAgICBwb3N0c0dldHRlcjogJ3Bvc3RzL2dldFBvc3RzJywKICAgIHRvdGFsUGFnZXM6ICdwb3N0cy9nZXRUb3RhbFBhZ2VzJywKICAgIGF1dGhvcnM6ICdwb3N0cy9nZXRBdXRob3JzJwogIH0pLCB7CiAgICBwb3N0czogZnVuY3Rpb24gcG9zdHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAodGhpcy51c2VySWQgJiYgdGhpcy51c2VySWQgIT09ICdBbGwnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucG9zdHNHZXR0ZXIoKS5maWx0ZXIoZnVuY3Rpb24gKHBvc3QpIHsKICAgICAgICAgIHJldHVybiBwb3N0LnVzZXJJZCA9PT0gK190aGlzLnVzZXJJZDsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMucG9zdHNHZXR0ZXIoKTsKICAgIH0KICB9KSwKICB3YXRjaDogewogICAgcGVyUGFnZTogZnVuY3Rpb24gcGVyUGFnZShuZXdWYWwsIG9sZFZhbCkgewogICAgICBjb25zb2xlLmxvZyhuZXdWYWwsIG9sZFZhbCk7CiAgICAgIHRoaXMuc2V0U2VhcmNoU3RyaW5nKCk7CiAgICB9LAogICAgbmV4dFBhZ2U6IGZ1bmN0aW9uIG5leHRQYWdlKCkgewogICAgICB0aGlzLnNldFNlYXJjaFN0cmluZygpOwogICAgfSwKICAgICRyb3V0ZTogZnVuY3Rpb24gJHJvdXRlKF9yZWYsIF9yZWYyKSB7CiAgICAgIHZhciBxdWVyeSA9IF9yZWYucXVlcnksCiAgICAgICAgICB1c2VySWQgPSBfcmVmLnBhcmFtcy51c2VySWQ7CiAgICAgIHZhciBvbGRRdWVyeSA9IF9yZWYyLnF1ZXJ5LAogICAgICAgICAgb2xkVXNlcklkID0gX3JlZjIucGFyYW1zLnVzZXJJZDsKCiAgICAgIGlmICh1c2VySWQgIT09IG9sZFVzZXJJZCB8fCBxdWVyeSAhPT0gb2xkUXVlcnkpIHsKICAgICAgICB0aGlzLmdldFBvc3RzQWN0aW9uKHsKICAgICAgICAgIG5leHRQYWdlOiB0aGlzLm5leHRQYWdlLAogICAgICAgICAgcGVyUGFnZTogK3RoaXMucGVyUGFnZQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5pbml0RmlsdGVyUGFyYW1zKCk7CiAgICB0aGlzLmluaXRpYWxHZXR0aW5nUG9zdHMoKTsKICB9Cn07"},{"version":3,"sources":["Posts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div >\n      <div class='content px-4 py-4'>\n        <PostsFilterComponent v-on:setAuthor='setAuthor' :authors='authors'/>\n        <div v-if=\"posts\" class='d-flex flex-wrap' >\n            <PostCardComponent\n              v-for=\"post of posts\"\n              :key = post.id\n              :post='post'\n              class='card my-3 mx-5'/>\n        </div>\n        <PostsPlaceholderComponent v-else/>\n      </div>\n      <PostsPaginationComponent\n        v-on:perPage='setPerPage'\n        v-on:nextPage='setNextPage'\n        :page='nextPage'\n        :initPerPage='initPerPage'\n        :total='totalPages' />\n    </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n  name: 'PostsComponent',\n  data: () => ({\n    initPerPage: 10,\n    perPage: 10,\n    nextPage: 1,\n    author: undefined,\n  }),\n  props: ['userId'],\n  components: {\n    PostCardComponent: () => import('./partials/PostCard.vue'),\n    PostsPlaceholderComponent: () => import('./partials/PostsPlaceholder.vue'),\n    PostsPaginationComponent: () => import('./partials/PostsPagination.vue'),\n    PostsFilterComponent: () => import('./partials/PostsFilter.vue'),\n  },\n\n  methods: {\n    ...mapActions({ getPostsAction: 'posts/getPosts' }),\n    setPerPage(val) { this.perPage = val; },\n    setNextPage(page) { this.nextPage = page; },\n    setInitPerPage(val) { this.initPerPage = val; },\n    setAuthor(author) {\n      this.$router.push({ params: { userId: author } })\n        .catch((error) => { if (error.name !== 'NavigationDuplicated') { throw error; } });\n    },\n    // DISPATCH ACTION TO GET POSTS\n    initialGettingPosts() {\n      // IF QUERIES ARE EXIST -> DISPATCH ACTION TO GET POSTS BY QUERY\n      if (this.$route.query.currentPage || this.$route.query.perPage) {\n        this.getPostsAction({\n          nextPage: this.$route.query.currentPage ? +this.$route.query.currentPage : 1,\n          perPage: this.$route.query.perPage ? +this.$route.query.perPage : 10,\n        });\n      // DISPATCH ACTION TO GET POSTS WITHOUT QUERY\n      } else { this.getPostsAction(); }\n    },\n    initFilterParams() {\n      if (this.$route.query.currentPage) this.setNextPage(+this.$route.query.currentPage);\n      if (this.$route.query.perPage) this.setPerPage(+this.$route.query.perPage);\n      if (this.$route.query.perPage) this.setInitPerPage(+this.$route.query.perPage);\n    },\n    setSearchString() {\n      this.$router.push({\n        query: {\n          perPage: this.perPage,\n          currentPage: +this.nextPage,\n        },\n        params: { userId: this.$route.params.userId ? this.$route.params.userId : 'All' },\n      }).catch((error) => { if (error.name !== 'NavigationDuplicated') { throw error; } });\n    },\n\n  },\n  computed: {\n    ...mapGetters({\n      postsGetter: 'posts/getPosts',\n      totalPages: 'posts/getTotalPages',\n      authors: 'posts/getAuthors',\n    }),\n    posts() {\n      if (this.userId && this.userId !== 'All') {\n        return this.postsGetter().filter((post) => post.userId === +this.userId);\n      }\n      return this.postsGetter();\n    },\n  },\n\n  watch: {\n    perPage(newVal, oldVal) { console.log(newVal, oldVal); this.setSearchString(); },\n    nextPage() { this.setSearchString(); },\n    $route({ query, params: { userId } }, { query: oldQuery, params: { userId: oldUserId } }) {\n      if (userId !== oldUserId || query !== oldQuery) {\n        this.getPostsAction({ nextPage: this.nextPage, perPage: +this.perPage });\n      }\n    },\n  },\n\n  created() {\n    this.initFilterParams();\n    this.initialGettingPosts();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  .content{\n    min-height: 88vh;\n  }\n</style>\n"],"sourceRoot":"src/views/posts"}]}